<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vinnie Magro</title>
    <description>Hi, my name is Vinnie. I am a sophomore at the University of Southern California studying Computer Engineering &amp; Computer Science.</description>
    <link>http://vinnie.io//blog/</link>
    <atom:link href="http://vinnie.io//blog/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 29 May 2015 10:23:08 -0700</pubDate>
    <lastBuildDate>Fri, 29 May 2015 10:23:08 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Take Charge</title>
        <description>&lt;p&gt;At &lt;a href=&quot;http://www.ucsbhacks.com/&quot;&gt;SB Hacks&lt;/a&gt; last weekend, we built &lt;a href=&quot;http://sbhacks.challengepost.com/submissions/32343-take-charge?utm_campaign=sb-hacks_20140908&amp;amp;utm_content=submission_visible_in_gallery&amp;amp;utm_medium=email&amp;amp;utm_source=transactional&quot;&gt;Take Charge&lt;/a&gt;, a device that could be disguised as a standard USB charger, but secretly hides a way to install a data-mining application on unsuspecting users’ phones.&lt;/p&gt;

&lt;p&gt;We do this by taking advantage of the implicit trust that a user has in an innocent-looking phone charger and the trust that Android blindly gives to USB input devices. Take Charge emulates a normal USB keyboard,
that is programmed to rapidly navigate through the Android settings menus to enable debugging and allow unknown sources, and then download our payload apk onto the device and install it on behalf of the user,
granting an alarming number of permissions in a matter of seconds.&lt;/p&gt;

&lt;p&gt;See a video of Take Charge in action below:&lt;/p&gt;

&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/LnVOQbqrt6Y&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;We use our emulated keyboard to unlock the device (doesn’t work if the user has a passcode, but things like Smart Unlock would still allow us to unlock the phone) after first waiting a few seconds so that the user isn’t looking at their phone to see what’s about to happen.
We take advantage of the fact that the stock Android launcher allows you to run a search query by just typing text anywhere on the homescreen, so we search for “Settings”, and open the Settings app, enable unknown sources, then go download our data-mining APK from the internet, and install it using our full keyboard access.
Then we go back to Settings and give Take Charge full access to notifications, so we can monitor all notifications that the user receives and upload them to our web dashboard in the background.&lt;/p&gt;

&lt;p&gt;We achieved this by using an Arduino Uno that is acting as a USB HID device by flashing an alternative firmware on the microcontroller that controls the Uno’s USB port as described &lt;a href=&quot;http://mitchtech.net/arduino-usb-hid-keyboard/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our code is available on GitHub &lt;a href=&quot;https://github.com/vmagro/TakeCharge&quot;&gt;web interface + Arduino code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Disclaimer: Take Charge is a proof of concept of a payload delivery system and a reminder to users to be more security conscious - Take Charge was never intended to be exploited.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Feb 2015 00:00:00 -0800</pubDate>
        <link>http://vinnie.io//blog/2015/02/01/takecharge/</link>
        <guid isPermaLink="true">http://vinnie.io//blog/2015/02/01/takecharge/</guid>
        
        
      </item>
    
      <item>
        <title>How I reduced the cache loading time of PhotoRun by 250x</title>
        <description>&lt;p&gt;I noticed that it was taking a ridiculously long time to load data from the cache in recent builds of &lt;a href=&quot;/blog/2014/01/16/sc-photorun&quot;&gt;PhotoRun&lt;/a&gt;.
I put a lot of timing debug statements in the code to figure out what was taking so long, and I was surprised to see that it was taking 8-9ms to read each line from the cache file
(it’s just a text file filled with JSON in the application’s data directory). Turns out that just by minifying the JSON response from our API,
that time could be reduced to just around 13ms for the &lt;em&gt;entire&lt;/em&gt; file (it was only one line after being minified).
I was happy to note that the cache loading times were reduced from 4.5s to around 180ms.&lt;/p&gt;

&lt;p&gt;For future reference, I was using a String to store the contents of the file, causing a large amount of copying in order to append the next line into the string.
This could be fixed using something like a StringBuffer. The issue wasn’t apparent until the file reached a few hundred lines, it was not a problem when there were only around 10.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Apr 2014 00:00:00 -0700</pubDate>
        <link>http://vinnie.io//blog/2014/04/02/how-i-reduced-the-cache-loading-time-of-photorun-by-250x/</link>
        <guid isPermaLink="true">http://vinnie.io//blog/2014/04/02/how-i-reduced-the-cache-loading-time-of-photorun-by-250x/</guid>
        
        
      </item>
    
      <item>
        <title>eyeBeacon</title>
        <description>&lt;iframe src=&quot;//www.youtube.com/embed/BLHIGsmp1DE?rel=0&quot; height=&quot;315&quot; width=&quot;560&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;eyeBeacon provides hyperlocal contextual storytelling and payments through Google Glass and Pebble.
Using Bluetooth LE iBeacons (powered by Raspberry Pi), eyeBeacon provides relevant information about buildings, museum exhibits, and anything else of interest,
and allows seamless instant payments through Venmo, all triggered by proximity to a beacon. Potential applications include malls, stores, museums, campus tours,
and anywhere else that requires location-based contextual information at an intimate level.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Mar 2014 00:00:00 -0800</pubDate>
        <link>http://vinnie.io//blog/2014/03/03/eyebeacon/</link>
        <guid isPermaLink="true">http://vinnie.io//blog/2014/03/03/eyebeacon/</guid>
        
        
      </item>
    
      <item>
        <title>Such Roadtrip. Wow</title>
        <description>&lt;p&gt;Such Roadtrip helps you create a digital scrapbook of your trip automatically with photos, tweets, and other updates.
Such Roadtrip will automatically organize all of your and your friends’ activities and plot them on a map in the context of your road trip,
so that you can relive the experience again.&lt;/p&gt;

&lt;p&gt;Such Roadtrip was my team’s entry to &lt;a href=&quot;http://hacktech.io&quot;&gt;hackTECH&lt;/a&gt; Winter 2014. We made it to the second round of judging and won an award from &lt;a href=&quot;www.digitalocean.com&quot;&gt;DigitalOcean&lt;/a&gt;!&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Jan 2014 00:00:00 -0800</pubDate>
        <link>http://vinnie.io//blog/2014/01/29/such-roadtrip-wow/</link>
        <guid isPermaLink="true">http://vinnie.io//blog/2014/01/29/such-roadtrip-wow/</guid>
        
        
      </item>
    
      <item>
        <title>SC PhotoRun</title>
        <description>&lt;p&gt;SC PhotoRun is a photo exploration game designed with the University of Southern California in mind. SC PhotoRun comes with several courses that guide you around campus to visit certain campus landmarks. The game includes achievements and leaderboards for each course, so you can quickly see where you stand among your friends.&lt;/p&gt;

&lt;p&gt;PhotoRun is a powerful and extensible platform that can easily be expanded to new locations - universities, museums, theme parks, even entire cities!&lt;/p&gt;

&lt;iframe src=&quot;//www.youtube.com/embed/ciICTLN2Xe0?rel=0&quot; height=&quot;315&quot; width=&quot;560&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https//play.google.com/store/apps/details?id=hacksc.team1.photorun&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://developer.android.com/images/brand/en_generic_rgb_wo_60.png&quot; alt=&quot;Get it on Google Play&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Jan 2014 00:00:00 -0800</pubDate>
        <link>http://vinnie.io//blog/2014/01/16/sc-photorun/</link>
        <guid isPermaLink="true">http://vinnie.io//blog/2014/01/16/sc-photorun/</guid>
        
        
      </item>
    
  </channel>
</rss>
